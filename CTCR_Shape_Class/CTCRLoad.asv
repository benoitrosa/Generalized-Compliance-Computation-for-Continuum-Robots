classdef CTCRLoad

% ======================================================================= %
% ============================== ctcr_load ============================== %
% ======================================================================= %
%
% tau_tip   : Vector of the torque applied to the RTC tip, given in the
% base frame
%
% f_tip     : Vector of the force applied to the RTC tip, given in the 
% base frame
%
% load_lim  : Vector composed of the two distances distances defining the 
% area over which the distributed forces are applied
% 
% tau_dist  : Vector of the distributed torque applied to the RTC, given 
% in the base frame
% 
% f_dist    : Vector of the distributed force applied to the RTC, given 
% in the base frame
%
% ======================================================================= %
% ======================================================================= %


    % ====== Members ======
    properties

        tau_tip     = [] ;
        f_tip       = [] ;
        load_lim_1  = [] ;
        tau_dist_1  = [] ;
        f_dist_1    = [] ;
        load_lim_2  = [] ;
        tau_dist_2  = [] ;
        f_dist_2    = [] ;

    end

    methods

        % ====== Constructor ======
        function mc = CTCRLoad(varargin)
            if nargin == 8

                mc.tau_tip      = varargin{1} ;
                mc.f_tip        = varargin{2} ;
                mc.load_lim_1   = varargin{3} ;
                mc.tau_dist_1   = varargin{4} ;
                mc.f_dist_1     = varargin{5} ;
                mc.load_lim_2   = varargin{6} ;
                mc.tau_dist_2   = varargin{7} ;
                mc.f_dist_2     = varargin{8} ;

            end
        end


        % ====== Get all ======
        function [tau_tip , f_tip , load_lim_1 , tau_dist_1 , f_dist_1 , load_lim_2 , tau_dist_2 , f_dist_2] = Get_All_CTCRLoad(mc)

            tau_tip     = mc.tau_tip ;
            f_tip       = mc.f_tip ;
            load_lim_1  = mc.load_lim_1 ;
            tau_dist_1  = mc.tau_dist_1 ;
            f_dist_1    = mc.f_dist_1 ;
            load_lim_2  = mc.load_lim_2 ;
            tau_dist_2  = mc.tau_dist_2 ;
            f_dist_2    = mc.f_dist_2 ;
           
        end
    
    end
end